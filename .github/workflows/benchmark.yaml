name: Pytest Benchmarks

on:
  pull_request:
    branches: [main, master]
    paths-ignore:
      - '.github/workflows/**'
      - '!.github/workflows/benchmark.yaml'
      - 'tests/**'
  push:
    branches: [main, master]
    paths-ignore:
      - '.github/workflows/**'
      - '!.github/workflows/benchmark.yaml'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  benchmark:
    name: Run Benchmarks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.13"
          cache: pip
          cache-dependency-path: |
            pyproject.toml
            setup.py
            tox.ini
            
      - name: Cache .mypy_cache
        uses: actions/cache@v4
        with:
          path: .mypy_cache
          key: mypy-cache-${{ runner.os }}-${{ hashFiles('**/*.py', 'pyproject.toml') }}
          
      - name: Restore ccache cache
        id: restore-ccache
        uses: actions/cache/restore@v4
        with:
          path: ~/.cache/ccache
          key: ccache-${{ runner.os }}-${{ hashFiles('setup.py', 'pyproject.toml') }}-${{ hashFiles('**/*.h', '**/*.c', '**/*.py') }}
          restore-keys: ccache-${{ runner.os }}-${{ hashFiles('setup.py', 'pyproject.toml') }}-

      - name: Install ccache
        run: sudo apt-get update && sudo apt-get install -y ccache
      
      - name: Install dependencies
        env:
          CC: ccache gcc
        run: |
          python -m pip install --upgrade pip
          pip install .[dev] pytest-codspeed pytest-benchmark web3
          
      - name: Remove Python files from test env
        run: |
          rm -r faster_web3
          rm -r faster_ens
          
      - name: Run Pytest Benchmark & Save Output
        run: pytest --benchmark-only --benchmark-json=benchmark.json benchmarks/
        
      - name: Upload Pytest Benchmark Results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-benchmark-results
          path: benchmark.json
          
      - name: Parse Pytest Benchmark Output
        run: python scripts/benchmark/parse_benchmark_output.py benchmark.json pytest_benchmark_results.json
        
      - name: Compare Pytest Benchmark Results
        run: python scripts/benchmark/compare_benchmark_results.py pytest_benchmark_results.json pytest_benchmark_diff.json
        
      - name: Generate Markdown Benchmark Results
        run: python scripts/benchmark/generate_benchmark_markdown.py
        
      - name: Commit and Push Markdown Benchmark Results
        continue-on-error: true
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin ${{ github.head_ref || github.ref_name }}
          git checkout ${{ github.head_ref || github.ref_name }}
          git add benchmarks/results/*.md
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update benchmark results [skip ci]"
            git push origin HEAD:${{ github.head_ref || github.ref_name }}
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload Markdown Benchmark Results
        uses: actions/upload-artifact@v4
        with:
          name: markdown-benchmark-results
          path: benchmarks/results/*.md
          
      - name: Upload Pytest Benchmark Diff
        uses: actions/upload-artifact@v4
        with:
          name: pytest-benchmark-diff
          path: pytest_benchmark_diff.json
          
      - name: Post Pytest Benchmark Diff as PR Comment
        uses: actions/github-script@v8
        with:
          script: |
            const fs = require('fs');
            const diff = JSON.parse(fs.readFileSync('pytest_benchmark_diff.json', 'utf8'));
            let body = '### Pytest Benchmark Diff\n\n';
            const repo = `${context.repo.owner}/${context.repo.repo}`;
            const branch = context.payload.pull_request ? context.payload.pull_request.head.ref : context.ref.replace('refs/heads/', '');
            for (const [submodule, groupDiffs] of Object.entries(diff)) {
              let submoduleFile = "unknown";
              let benchmarkFile = "unknown";
              const m = submodule.match(/^faster_web3\.(.+)$/);
              if (m) {
                submoduleFile = `faster_web3/${m[1]}.py`;
                benchmarkFile = `benchmarks/test_${m[1]}_benchmarks.py`;
              }
              const submoduleUrl = `https://github.com/${repo}/blob/${branch}/${submoduleFile}`;
              const benchmarkUrl = `https://github.com/${repo}/blob/${branch}/${benchmarkFile}`;
              body += `#### [${submodule}](${submoduleUrl}) - [view benchmarks](${benchmarkUrl})\n`;
              body += '| Function | Reference Mean | Faster Mean | % Change | Speedup (%) | x Faster | Faster |\n';
              body += '|----------|---------------|-------------|----------|-------------|----------|--------|\n';
              for (const [group, data] of Object.entries(groupDiffs).sort(([a], [b]) => a.localeCompare(b))) {
                if (data.percent_change !== null && data.percent_change !== undefined) {
                  let emoji = '➖';
                  if (data.percent_change > 0) emoji = '✅';
                  else if (data.percent_change < 0) emoji = '❌';
                  const percentChange = data.percent_change !== undefined && data.percent_change !== null
                    ? `${data.percent_change.toFixed(2)}%` : '';
                  const speedupPercent = data.speedup_percent !== undefined && data.speedup_percent !== null
                    ? `${data.speedup_percent.toFixed(2)}%` : '';
                  const speedupX = data.speedup_x !== undefined && data.speedup_x !== null && isFinite(data.speedup_x)
                    ? `${data.speedup_x.toFixed(2)}x` : '';
                  body += `| \`${group}\` | ${data.reference_mean} | ${data.faster_mean} | ${percentChange} | ${speedupPercent} | ${speedupX} | ${emoji} |\n`;
                } else if (data.note) {
                  body += `| \`${group}\` |  |  |  |  |  | ➖ |\n`;
                }
              }
              body += '\n';
            }
            github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body
            });
        if: github.event_name == 'pull_request'
      
      - name: Save ccache cache
        uses: actions/cache/save@v4
        with:
          path: ~/.cache/ccache
          key: ccache-${{ runner.os }}-${{ hashFiles('setup.py', 'pyproject.toml') }}-${{ hashFiles('**/*.h', '**/*.c', '**/*.py') }}
