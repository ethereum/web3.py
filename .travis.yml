sudo: required
language: python
python:
  - "3.5"
dist: trusty
env:
  global:
    - GETH_BASE_INSTALL_PATH=$TRAVIS_BUILD_DIR
matrix:
  include:
    # lint
    - python: "3.5"
      env: TOX_POSARGS="-e flake8"
    # core-stdlib
    - python: "2.7"
      env: TOX_POSARGS="-e py27-core-stdlib"
    - python: "3.4"
      env: TOX_POSARGS="-e py34-core-stdlib"
    - python: "3.5"
      env: TOX_POSARGS="-e py35-core-stdlib"
    # core-gevent
    - python: "2.7"
      env: TOX_POSARGS="-e py27-core-gevent"
    - python: "3.4"
      env: TOX_POSARGS="-e py34-core-gevent"
    - python: "3.5"
      env: TOX_POSARGS="-e py35-core-gevent"
    # eth-testrpc
    - python: "2.7"
      env: TOX_POSARGS="-e py27-integration-ethtestrpc"
    - python: "3.4"
      env: TOX_POSARGS="-e py34-integration-ethtestrpc"
    - python: "3.5"
      env: TOX_POSARGS="-e py35-integration-ethtestrpc"
    # eth-tester-pyethereum16
    - python: "2.7"
      env: TOX_POSARGS="-e py27-integration-ethtester" ETHEREUM_TESTER_CHAIN_BACKEND=eth_tester.backends.PyEthereum16Backend
    - python: "3.4"
      env: TOX_POSARGS="-e py34-integration-ethtester" ETHEREUM_TESTER_CHAIN_BACKEND=eth_tester.backends.PyEthereum16Backend
    - python: "3.5"
      env: TOX_POSARGS="-e py35-integration-ethtester" ETHEREUM_TESTER_CHAIN_BACKEND=eth_tester.backends.PyEthereum16Backend
    # eth-tester-pyevm
    - python: "3.5"
      env: TOX_POSARGS="-e py35-integration-ethtester" ETHEREUM_TESTER_CHAIN_BACKEND=eth_tester.backends.PyEVMBackend
    # go-ethereum
    - python: "3.5"
      env: TOX_POSARGS="-e py27-integration-goethereum -e py34-integration-goethereum -e py35-integration-goethereum" GETH_VERSION=v1.6.0
    - python: "3.5"
      env: TOX_POSARGS="-e py27-integration-goethereum -e py34-integration-goethereum -e py35-integration-goethereum" GETH_VERSION=v1.6.1
    - python: "3.5"
      env: TOX_POSARGS="-e py27-integration-goethereum -e py34-integration-goethereum -e py35-integration-goethereum" GETH_VERSION=v1.6.2
    - python: "3.5"
      env: TOX_POSARGS="-e py27-integration-goethereum -e py34-integration-goethereum -e py35-integration-goethereum" GETH_VERSION=v1.6.3
    - python: "3.5"
      env: TOX_POSARGS="-e py27-integration-goethereum -e py34-integration-goethereum -e py35-integration-goethereum" GETH_VERSION=v1.6.4
    - python: "3.5"
      env: TOX_POSARGS="-e py27-integration-goethereum -e py34-integration-goethereum -e py35-integration-goethereum" GETH_VERSION=v1.6.5
    - python: "3.5"
      env: TOX_POSARGS="-e py27-integration-goethereum -e py34-integration-goethereum -e py35-integration-goethereum" GETH_VERSION=v1.6.6
    - python: "3.5"
      env: TOX_POSARGS="-e py27-integration-goethereum -e py34-integration-goethereum -e py35-integration-goethereum" GETH_VERSION=v1.6.7
cache:
  - pip: true
  - directories:
    - $HOME/.ethash/
before_install:
  - if [ -n "$GETH_VERSION" ]; then travis_retry sudo add-apt-repository -y ppa:gophers/archive; fi
  - if [ -n "$GETH_VERSION" ]; then travis_retry sudo apt-get update; fi
  - if [ -n "$GETH_VERSION" ]; then mkdir -p $HOME/.ethash; fi
install:
  - if [ -n "$GETH_VERSION" ]; then travis_retry sudo apt-get install -y golang-1.7 build-essential; fi
  - travis_retry pip install pip setuptools --upgrade
  - travis_retry pip install tox
before_script:
  - if [ -n "$GETH_VERSION" ]; then travis_retry pip3 install py-geth==1.10.0; fi
  - if [ -n "$GETH_VERSION" ]; then python3 -m geth.install $GETH_VERSION; fi
  - if [ -n "$GETH_VERSION" ]; then export GOROOT=/usr/lib/go-1.7; fi
  - if [ -n "$GETH_VERSION" ]; then export GETH_BINARY="$GETH_BASE_INSTALL_PATH/geth-$GETH_VERSION/bin/geth"; fi
  - if [ -n "$GETH_VERSION" ]; then $GETH_BINARY version; fi
  - if [ -n "$GETH_VERSION" ]; then $GETH_BINARY makedag 0 $HOME/.ethash; fi
  - pip freeze
script:
  - tox $TOX_POSARGS
