[tox]
envlist=
    py{36,37,38,39}-ens
    py{36,37,38,39}-ethpm
    py{36,37,38,39}-core
    py{36,37,38,39}-integration-{goethereum,ethtester}
    lint
    docs
    benchmark
    py{36,37,38,39}-wheel-cli

[isort]
combine_as_imports=True
force_sort_within_sections=True
include_trailing_comma=True
known_standard_library=pytest
known_third_party=lru,eth_tester
known_first_party=web3,ens,ethpm
line_length=21
multi_line_output=3
skip=web3/main.py,web3/utils/windows.py,ethpm/ethpm-spec/
use_parentheses=True

[flake8]
max-line-length= 100
exclude= venv*,.tox,docs,build
ignore=W503
[testenv]
whitelist_externals=/usr/bin/make
install_command=python -m pip install --no-use-pep517 {opts} {packages}
usedevelop=True
commands=
    core: pytest {posargs:tests/core}
    ens: pytest {posargs:tests/ens}
    ethpm: pytest {posargs:tests/ethpm}
    integration-goethereum-ipc: pytest {posargs:tests/integration/go_ethereum/test_goethereum_ipc.py}
    integration-goethereum-http: pytest {posargs:tests/integration/go_ethereum/test_goethereum_http.py}
    integration-goethereum-ws: pytest {posargs:tests/integration/go_ethereum/test_goethereum_ws.py}
    integration-ethtester: pytest {posargs:tests/integration/test_ethereum_tester.py}
    docs: make -C {toxinidir} validate-docs
deps =
    .[dev]
passenv =
    GETH_BINARY
    GETH_VERSION
    GOROOT
    GOPATH
    WEB3_INFURA_PROJECT_ID
    WEB3_INFURA_API_SECRET
basepython =
    docs: python3.6
    py36: python3.6
    py37: python3.7
    py38: python3.8
    py39: python3.9

[testenv:lint]
basepython=python
extras=linter
commands=
    flake8 {toxinidir}/web3 {toxinidir}/ens {toxinidir}/ethpm {toxinidir}/tests --exclude {toxinidir}/ethpm/ethpm-spec
    isort --recursive --check-only --diff {toxinidir}/web3/ {toxinidir}/ens/ {toxinidir}/ethpm/ {toxinidir}/tests/
    mypy -p web3 -p ethpm -p ens --config-file {toxinidir}/mypy.ini

[testenv:benchmark]
basepython=python
commands=
    python {toxinidir}/web3/tools/benchmark/main.py --num-calls 5
    python {toxinidir}/web3/tools/benchmark/main.py --num-calls 50
    python {toxinidir}/web3/tools/benchmark/main.py --num-calls 100

[common-wheel-cli]
deps=wheel
whitelist_externals=
    /bin/rm
    /bin/bash
commands=
    /bin/rm -rf build dist
    python setup.py sdist bdist_wheel
    /bin/bash -c 'pip install --upgrade "$(ls dist/web3-*-py3-none-any.whl)" --progress-bar off'
    python -c "from web3.auto import w3"

[testenv:py36-wheel-cli]
deps={[common-wheel-cli]deps}
whitelist_externals={[common-wheel-cli]whitelist_externals}
commands={[common-wheel-cli]commands}
skip_install=true

[testenv:py37-wheel-cli]
deps={[common-wheel-cli]deps}
whitelist_externals={[common-wheel-cli]whitelist_externals}
commands={[common-wheel-cli]commands}
skip_install=true

[testenv:py38-wheel-cli]
deps={[common-wheel-cli]deps}
whitelist_externals={[common-wheel-cli]whitelist_externals}
commands={[common-wheel-cli]commands}
skip_install=true

[testenv:py39-wheel-cli]
deps={[common-wheel-cli]deps}
whitelist_externals={[common-wheel-cli]whitelist_externals}
commands={[common-wheel-cli]commands}
skip_install=true

[common-wheel-cli-windows]
deps=wheel
whitelist_externals=
    bash.exe
commands=
    bash.exe -c "rm -rf build dist"
    python setup.py sdist bdist_wheel
    bash.exe -c 'pip install --upgrade "$(ls dist/web3-*-py3-none-any.whl)" --progress-bar off'
    python -c "from web3.auto import w3"

[testenv:py37-wheel-cli-windows]
deps={[common-wheel-cli]deps}
whitelist_externals={[common-wheel-cli-windows]whitelist_externals}
commands={[common-wheel-cli-windows]commands}
skip_install=true
